


# installing packages

library(ggplot2)
library(caret)
library(randomForest)
library(rpart) 
library(rpart.plot) 
library(RColorBrewer) 
library(rattle) 
library(survival)
library(splines)
library(plyr)

setwd("~/GitHub/PLM")

## Load Data and replace missing values with NA

train<- read.csv("~/GitHub/PLM/pml-training.csv", na.strings=c("#DIV/0!"), row.names = 1)


test<- read.csv("~/GitHub/PLM/pml-testing.csv", na.strings=c("#DIV/0!"), row.names = 1)


dim(train)

table(train$classe)


set.seed(123456)

trainset <- createDataPartition(train$classe, p = 0.8, list = FALSE)

Training <- train[trainset, ]

Validation <- train[-trainset, ]

# exclude near zero variance features

nzvcol <- nearZeroVar(Training)

Training <- Training[, -nzvcol]

# exclude columns with m40% ore more missing values exclude descriptive
# columns like name etc

cntlength <- sapply(Training, function(x) {
  sum(!(is.na(x) | x == ""))
})
nullcol <- names(cntlength[cntlength < 0.6 * length(Training$classe)])
descriptcol <- c("X", "user_name", "raw_timestamp_part_1", "raw_timestamp_part_2", 
                 "cvtd_timestamp", "new_window", "num_window")
excludecols <- c(descriptcol, nullcol)
Training <- Training[, !names(Training) %in% excludecols]

##Model Train
## randomForest 4.6-7
## Type rfNews() to see new features/changes/bug fixes.

rfModel <- randomForest(classe ~ ., data = Training, importance = TRUE, ntrees = 10)

##Training set accuracy

ptraining <- predict(rfModel, Training)

print(confusionMatrix(ptraining, Training$classe))

##Validation set accuracy (Out-of-Sample)


pvalidation <- predict(rfModel, Validation)

print(confusionMatrix(pvalidation, Validation$classe))

##Test set prediction


ptest <- predict(rfModel, test)

## save the output to files and post to submssion.

answers <- as.vector(ptest)

answers

pml_write_files = function(x) {
  n = length(x)
  for (i in 1:n) {
    filename = paste0("problem_id_", i, ".txt")
    write.table(x[i], file = filename, quote = FALSE, row.names = FALSE, 
                col.names = FALSE)
  }
}

pml_write_files(answers)


